{"code":"import * as tslib_1 from \"tslib\";\r\nimport { AuthorizationsApi } from '../api';\r\nvar default_1 = (function () {\r\n    function default_1(basePath, baseOptions) {\r\n        this.service = new AuthorizationsApi({ basePath: basePath, baseOptions: baseOptions });\r\n        this.serviceOptions = baseOptions;\r\n    }\r\n    default_1.prototype.get = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.getAuthorizationsID(id, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        data = (_a.sent()).data;\r\n                        return [2, data];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.getAuthorizationToken = function (username) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var authorizations;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.getAllByUsername(username)];\r\n                    case 1:\r\n                        authorizations = _a.sent();\r\n                        if (authorizations[0]) {\r\n                            return [2, authorizations[0].token || null];\r\n                        }\r\n                        return [2, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.getAll = function (orgID) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var authorizations;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.getAuthorizations(undefined, undefined, undefined, orgID, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        authorizations = (_a.sent()).data.authorizations;\r\n                        return [2, authorizations || []];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.getAllByUsername = function (username) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var authorizations;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.getAuthorizations(undefined, undefined, username, undefined, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        authorizations = (_a.sent()).data.authorizations;\r\n                        return [2, authorizations || []];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.create = function (auth) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.postAuthorizations(auth, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        data = (_a.sent()).data;\r\n                        return [2, data];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.update = function (id, update) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var original, data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.get(id)];\r\n                    case 1:\r\n                        original = _a.sent();\r\n                        return [4, this.service.patchAuthorizationsID(id, tslib_1.__assign({}, original, update), undefined, this.serviceOptions)];\r\n                    case 2:\r\n                        data = (_a.sent()).data;\r\n                        return [2, data];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.delete = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.deleteAuthorizationsID(id, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        data = (_a.sent()).data;\r\n                        return [2, data];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return default_1;\r\n}());\r\nexport default default_1;\r\n","references":["/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/src/api/index.ts","/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/src/types/index.ts"],"dts":{"name":"/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/wrappers/authorizations.d.ts","writeByteOrderMark":false,"text":"import { Authorization } from '../api';\r\nimport { ServiceOptions } from '../types';\r\nexport default class {\r\n    private service;\r\n    private serviceOptions;\r\n    constructor(basePath: string, baseOptions: ServiceOptions);\r\n    get(id: string): Promise<Authorization>;\r\n    getAuthorizationToken(username: string): Promise<string | null>;\r\n    getAll(orgID?: string): Promise<Authorization[]>;\r\n    getAllByUsername(username: string): Promise<Authorization[]>;\r\n    create(auth: Authorization): Promise<Authorization>;\r\n    update(id: string, update: Partial<Authorization>): Promise<Authorization>;\r\n    delete(id: string): Promise<Response>;\r\n}\r\n"}}
