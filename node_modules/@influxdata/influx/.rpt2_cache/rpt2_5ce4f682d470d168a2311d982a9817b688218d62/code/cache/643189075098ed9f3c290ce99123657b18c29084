{"code":"import * as tslib_1 from \"tslib\";\r\nimport { OrganizationsApi, } from '../api';\r\nvar default_1 = (function () {\r\n    function default_1(basePath, baseOptions) {\r\n        this.service = new OrganizationsApi({ basePath: basePath, baseOptions: baseOptions });\r\n        this.serviceOptions = baseOptions;\r\n    }\r\n    default_1.prototype.get = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.getOrgsID(id, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        data = (_a.sent()).data;\r\n                        return [2, data];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.getAll = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var orgs;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.getOrgs(undefined, undefined, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        orgs = (_a.sent()).data.orgs;\r\n                        return [2, orgs || []];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.create = function (org) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.postOrgs(org, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        data = (_a.sent()).data;\r\n                        return [2, data];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.delete = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.deleteOrgsID(id, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        data = (_a.sent()).data;\r\n                        return [2, data];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.update = function (id, org) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var original, data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.get(id)];\r\n                    case 1:\r\n                        original = _a.sent();\r\n                        return [4, this.service.patchOrgsID(id, tslib_1.__assign({}, original, org), undefined, this.serviceOptions)];\r\n                    case 2:\r\n                        data = (_a.sent()).data;\r\n                        return [2, data];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.members = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var users;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.getOrgsIDMembers(id, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        users = (_a.sent()).data.users;\r\n                        return [2, users || []];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.owners = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var users;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.getOrgsIDOwners(id, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        users = (_a.sent()).data.users;\r\n                        return [2, users || []];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.createOwner = function (id, user) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.postOrgsIDOwners(id, user, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        data = (_a.sent()).data;\r\n                        return [2, data];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.addMember = function (id, user) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.postOrgsIDMembers(id, user, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        data = (_a.sent()).data;\r\n                        return [2, data];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.removeMember = function (orgID, userID) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.deleteOrgsIDMembersID(userID, orgID, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        data = (_a.sent()).data;\r\n                        return [2, data];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return default_1;\r\n}());\r\nexport default default_1;\r\n","references":["/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/src/api/index.ts","/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/src/types/index.ts"],"dts":{"name":"/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/wrappers/organizations.d.ts","writeByteOrderMark":false,"text":"import { AddResourceMemberRequestBody, Organization, ResourceMember, ResourceOwner } from '../api';\r\nimport { ServiceOptions } from '../types';\r\nexport default class {\r\n    private service;\r\n    private serviceOptions;\r\n    constructor(basePath: string, baseOptions: ServiceOptions);\r\n    get(id: string): Promise<Organization>;\r\n    getAll(): Promise<Organization[]>;\r\n    create(org: Organization): Promise<Organization>;\r\n    delete(id: string): Promise<Response>;\r\n    update(id: string, org: Partial<Organization>): Promise<Organization>;\r\n    members(id: string): Promise<ResourceMember[]>;\r\n    owners(id: string): Promise<ResourceOwner[]>;\r\n    createOwner(id: string, user: AddResourceMemberRequestBody): Promise<ResourceOwner>;\r\n    addMember(id: string, user: AddResourceMemberRequestBody): Promise<ResourceMember>;\r\n    removeMember(orgID: string, userID: string): Promise<Response>;\r\n}\r\n"}}
