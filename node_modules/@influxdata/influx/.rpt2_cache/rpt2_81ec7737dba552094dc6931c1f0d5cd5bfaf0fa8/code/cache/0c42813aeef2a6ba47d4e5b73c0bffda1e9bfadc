{"code":"export var TableWrappingType;\r\n(function (TableWrappingType) {\r\n    TableWrappingType[\"Truncate\"] = \"truncate\";\r\n    TableWrappingType[\"Wrap\"] = \"wrap\";\r\n    TableWrappingType[\"SingleLine\"] = \"single-line\";\r\n})(TableWrappingType || (TableWrappingType = {}));\r\n","references":["/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/src/api/index.ts"],"dts":{"name":"/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/types/dashboards.d.ts","writeByteOrderMark":false,"text":"import { View as ViewGen, ViewType, XYViewProperties as XYViewPropertiesGen, LinePlusSingleStatProperties as LinePlusSingleStatPropertiesGen, SingleStatViewProperties as SingleStatViewPropertiesGen, TableViewProperties as TableViewPropertiesGen, GaugeViewProperties as GaugeViewPropertiesGen, HistogramViewProperties as HistogramViewPropertiesGen, HeatmapViewProperties as HeatmapViewPropertiesGen, ScatterViewProperties as ScatterViewPropertiesGen, CheckViewProperties as CheckViewPropertiesGen, RenamableField } from '../api';\r\nexport interface View<T extends ViewProperties = ViewProperties> extends ViewGen {\r\n    properties?: T;\r\n    dashboardID?: string;\r\n    cellID?: string;\r\n}\r\nexport declare type ViewProperties = XYViewProperties | LinePlusSingleStatProperties | SingleStatViewProperties | TableViewProperties | GaugeViewProperties | MarkdownViewProperties | EmptyViewProperties | HistogramViewProperties | HeatmapViewProperties | ScatterViewProperties | CheckViewProperties;\r\nexport interface XYViewProperties extends XYViewPropertiesGen {\r\n    type: ViewType.Xy;\r\n}\r\nexport declare type XYView = View<XYViewProperties>;\r\nexport interface LinePlusSingleStatProperties extends LinePlusSingleStatPropertiesGen {\r\n    type: ViewType.LinePlusSingleStat;\r\n}\r\nexport declare type LinePlusSingleStatView = View<LinePlusSingleStatProperties>;\r\nexport interface SingleStatViewProperties extends SingleStatViewPropertiesGen {\r\n    type: ViewType.SingleStat;\r\n}\r\nexport declare type SingleStatView = View<SingleStatViewProperties>;\r\nexport interface TableViewProperties extends TableViewPropertiesGen {\r\n    type: ViewType.Table;\r\n    tableOptions: TableOptions;\r\n}\r\nexport declare type TableView = View<TableViewProperties>;\r\nexport interface GaugeViewProperties extends GaugeViewPropertiesGen {\r\n    type: ViewType.Gauge;\r\n}\r\nexport declare type GaugeView = View<GaugeViewProperties>;\r\nexport interface HistogramViewProperties extends HistogramViewPropertiesGen {\r\n    type: ViewType.Histogram;\r\n}\r\nexport declare type HistogramView = View<HistogramViewProperties>;\r\nexport interface HeatmapViewProperties extends HeatmapViewPropertiesGen {\r\n    type: ViewType.Heatmap;\r\n}\r\nexport declare type HeatmapView = View<HeatmapViewProperties>;\r\nexport interface ScatterViewProperties extends ScatterViewPropertiesGen {\r\n    type: ViewType.Scatter;\r\n}\r\nexport declare type ScatterView = View<ScatterViewProperties>;\r\nexport interface CheckViewProperties extends CheckViewPropertiesGen {\r\n    type: ViewType.Check;\r\n}\r\nexport declare type CheckView = View<CheckViewProperties>;\r\nexport interface MarkdownViewProperties {\r\n    type: ViewType.Markdown;\r\n    text: string;\r\n}\r\nexport declare type MarkdownView = View<MarkdownViewProperties>;\r\nexport interface EmptyViewProperties {\r\n    type: ViewType.Empty;\r\n}\r\nexport declare type EmptyView = View<EmptyViewProperties>;\r\nexport interface TableOptions {\r\n    verticalTimeAxis: boolean;\r\n    sortBy: RenamableField;\r\n    wrapping: TableWrappingType;\r\n    fixFirstColumn: boolean;\r\n}\r\nexport declare enum TableWrappingType {\r\n    Truncate = \"truncate\",\r\n    Wrap = \"wrap\",\r\n    SingleLine = \"single-line\"\r\n}\r\n"}}
