{"code":"import * as tslib_1 from \"tslib\";\r\nimport { WriteApi, WritePrecision } from '../api';\r\nvar default_1 = (function () {\r\n    function default_1(basePath, baseOptions) {\r\n        this.service = new WriteApi({ basePath: basePath, baseOptions: baseOptions });\r\n        this.serviceOptions = baseOptions;\r\n    }\r\n    Object.defineProperty(default_1.prototype, \"WritePrecision\", {\r\n        get: function () {\r\n            return WritePrecision;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    default_1.prototype.create = function (orgID, bucket, data, options) {\r\n        if (options === void 0) { options = {}; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var precision, response;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        precision = options.precision || WritePrecision.Ns;\r\n                        return [4, this.service.postWrite(orgID, bucket, data, undefined, undefined, undefined, undefined, undefined, precision, this.serviceOptions)];\r\n                    case 1:\r\n                        response = (_a.sent()).data;\r\n                        return [2, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return default_1;\r\n}());\r\nexport default default_1;\r\n","references":["/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/src/api/index.ts","/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/src/types/index.ts"],"dts":{"name":"/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/wrappers/write.d.ts","writeByteOrderMark":false,"text":"import { WritePrecision } from '../api';\r\nimport { ServiceOptions } from '../types';\r\ninterface ICreateOptions {\r\n    precision: WritePrecision;\r\n}\r\nexport default class {\r\n    private service;\r\n    private serviceOptions;\r\n    constructor(basePath: string, baseOptions: ServiceOptions);\r\n    readonly WritePrecision: typeof WritePrecision;\r\n    create(orgID: string, bucket: string, data: string, options?: Partial<ICreateOptions>): Promise<Response>;\r\n}\r\nexport {};\r\n"}}
