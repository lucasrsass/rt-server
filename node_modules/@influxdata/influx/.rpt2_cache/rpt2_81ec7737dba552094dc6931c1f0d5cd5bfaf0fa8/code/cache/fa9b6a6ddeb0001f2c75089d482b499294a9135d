{"code":"import * as tslib_1 from \"tslib\";\r\nimport { BucketsApi } from '../api';\r\nimport { addLabelDefaults } from './labels';\r\nvar addDefaults = function (bucket) { return (tslib_1.__assign({}, bucket, { labels: (bucket.labels || []).map(addLabelDefaults) })); };\r\nvar addDefaultsToAll = function (buckets) {\r\n    return buckets.map(addDefaults);\r\n};\r\nvar default_1 = (function () {\r\n    function default_1(basePath, baseOptions) {\r\n        this.service = new BucketsApi({ basePath: basePath, baseOptions: baseOptions });\r\n        this.serviceOptions = baseOptions;\r\n    }\r\n    default_1.prototype.get = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.getBucketsID(id, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        data = (_a.sent()).data;\r\n                        return [2, addDefaults(data)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.getAll = function (orgID) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var buckets;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.getBuckets(undefined, undefined, undefined, undefined, orgID, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        buckets = (_a.sent()).data.buckets;\r\n                        return [2, addDefaultsToAll(buckets || [])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.create = function (bucket) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.postBuckets(bucket, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        data = (_a.sent()).data;\r\n                        return [2, addDefaults(data)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.update = function (id, bucket) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var original, data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.get(id)];\r\n                    case 1:\r\n                        original = _a.sent();\r\n                        return [4, this.service.patchBucketsID(id, tslib_1.__assign({}, original, bucket), undefined, this.serviceOptions)];\r\n                    case 2:\r\n                        data = (_a.sent()).data;\r\n                        return [2, addDefaults(data)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    default_1.prototype.delete = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, this.service.deleteBucketsID(id, undefined, this.serviceOptions)];\r\n                    case 1:\r\n                        data = (_a.sent()).data;\r\n                        return [2, data];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return default_1;\r\n}());\r\nexport default default_1;\r\n","references":["/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/src/api/index.ts","/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/src/types/index.ts","/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/src/wrappers/labels.ts"],"dts":{"name":"/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/wrappers/buckets.d.ts","writeByteOrderMark":false,"text":"import { Bucket } from '../api';\r\nimport { IBucket, ServiceOptions } from '../types';\r\ndeclare type BucketPicked = Pick<Bucket, 'orgID' | 'name'>;\r\ndeclare type BucketRest = Pick<Bucket, Exclude<keyof Bucket, keyof BucketPicked>>;\r\ndeclare type BucketRequired = {\r\n    [P in keyof BucketPicked]-?: BucketPicked[P];\r\n};\r\ndeclare type BucketCreate = BucketRequired & BucketRest;\r\nexport default class {\r\n    private service;\r\n    private serviceOptions;\r\n    constructor(basePath: string, baseOptions: ServiceOptions);\r\n    get(id: string): Promise<IBucket>;\r\n    getAll(orgID?: string): Promise<IBucket[]>;\r\n    create(bucket: BucketCreate): Promise<IBucket>;\r\n    update(id: string, bucket: Partial<Bucket>): Promise<IBucket>;\r\n    delete(id: string): Promise<Response>;\r\n}\r\nexport {};\r\n"}}
