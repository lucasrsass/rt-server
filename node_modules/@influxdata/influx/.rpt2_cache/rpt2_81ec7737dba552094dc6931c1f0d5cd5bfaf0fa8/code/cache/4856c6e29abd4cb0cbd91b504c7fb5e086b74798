{"code":"import * as tslib_1 from \"tslib\";\r\nfunction rollback(index, sagas) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var i;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    i = index;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!(i >= 0)) return [3, 4];\r\n                    return [4, sagas[i].rollback(sagas[i].result)];\r\n                case 2:\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3:\r\n                    i--;\r\n                    return [3, 1];\r\n                case 4: return [2];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction saga(sagas) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var i, result, e_1;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    i = 0;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!(i < sagas.length)) return [3, 7];\r\n                    _a.label = 2;\r\n                case 2:\r\n                    _a.trys.push([2, 4, , 6]);\r\n                    return [4, sagas[i].action()];\r\n                case 3:\r\n                    result = _a.sent();\r\n                    sagas[i].result = result;\r\n                    return [3, 6];\r\n                case 4:\r\n                    e_1 = _a.sent();\r\n                    console.error(e_1);\r\n                    return [4, rollback(i - 1, sagas)];\r\n                case 5:\r\n                    _a.sent();\r\n                    throw new Error('Failed to complete 1 or more actions, successful actions rolled back');\r\n                case 6:\r\n                    i++;\r\n                    return [3, 1];\r\n                case 7: return [2, sagas.map(function (s) { return s.result; }).filter(function (r) { return !!r; })];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport default saga;\r\n","references":[],"dts":{"name":"/Users/denizkusefoglu/go/src/github.com/influxdata/influxdb-client-js/utils/sagas.d.ts","writeByteOrderMark":false,"text":"interface Saga<T> {\r\n    action: () => Promise<T>;\r\n    rollback: (result?: T) => Promise<void>;\r\n    result?: T;\r\n}\r\ndeclare function saga<T>(sagas: Saga<T>[]): Promise<Array<T>>;\r\nexport default saga;\r\n"}}
